<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2019s on nownab.log</title>
    <link>https://blog.nownabe.com/2019/</link>
    <description>Recent content in 2019s on nownab.log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 15 Jun 2019 19:27:08 +0900</lastBuildDate>
    
	<atom:link href="https://blog.nownabe.com/2019/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>『分散システムデザインパターン』を読んだ</title>
      <link>https://blog.nownabe.com/2019/06/15/read-designing-distributed-systems/</link>
      <pubDate>Sat, 15 Jun 2019 19:27:08 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/06/15/read-designing-distributed-systems/</guid>
      <description>分散システムデザインパターンを読みました。 感想 分散システムのインフラ構成のデザインパターンの解説本です。 分散システムといっても難しいものでは</description>
    </item>
    
    <item>
      <title>ブログの静的サイトジェネレータをMiddlemanからHugoに変えた</title>
      <link>https://blog.nownabe.com/2019/06/14/migrate-blog-from-middleman-to-hugo/</link>
      <pubDate>Fri, 14 Jun 2019 22:45:14 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/06/14/migrate-blog-from-middleman-to-hugo/</guid>
      <description>概要 このブログを生成してる静的サイトジェネレータをMiddlemanからHugoに変えました。
なぜMiddlemanをやめたのか アップデートがつらかったのでやめました。 久々にMiddlemanアップデートしようとしてbundle updateしたら、解決できるGemのバージョンねーよ！と言われてやめるのを決意しました。
アップデートがつらいのは次のような理由でした。
 Middlemanも本体だけでなくmiddleman-blogやmiddleman-deployなどもあってそもそも依存関係がめんどくさかった esa.ioで記事を書いていたので、MarkdownのRendererに親和性の高いqiita-markdownを使えるようにするGemを独自で作ってた Emojiを使うためにそこをさらに拡張していた esa.ioのfrontmatterでは正確な投稿日が取れないのでGitから取るようにMiddlemanにパッチを当ててた  いろいろパッチあててるのだるかったし、他にもPythonの2.7に依存があったり、いつのまにかシンタックスハイライト効かなくなってたり、使ってたCIのWerckerがOracleに買収されたり(関係ない)と以前からやめたいとは思ってたので良い機会でした。
なぜHugoにしたのか Go製のジェネレータで特に問題がなかったからです。
他と比較してないのでなんとも言えませんが、Go製ということで最初に試して、十分に早いし特に拡張することなくやりたいことができたのでHugoにしました。
心配していたこの辺はなんなくクリアしました。
 今までのURLがそのまま使えるか Pythonへ依存してないか Emojiが使えるか テーマ作るの難しくないか  この辺はどうでも良い部分でした。
 SlimやSCSSで書いてたけど、頻繁には変えないし量も少ないのでのHTMLやCSSで書いてもいい esaの吐くFrontmatterとMarkdownを解釈する必要があったけど、esaはすでにやめていたのでHugoが解釈できるMarkdownで書けばいい  後者について既存の記事を変換する必要はあったので、Rubyでスクリプトを書いて変換しました。
テーマはMiddlemanのときのものをそのまま流用して作りました。
デプロイ ついでにCI/CDをWerckerからGitHub Actionsに変えました。 Werckerもいろいろ変わったけどOracleに買収されてて追従する気はないし、GitHubで完結してれば一番うれしいのでActionsを使うことにしました。
GitHub Actionsは初めて使ったんですが、シンプルでいいですね。
おわりに MiddlemanからHugoに変わって依存関係がなくなったし変なパッチもなくなったしビルドは早くなったしシンタックスもハイライトされて万々歳です。 スッキリしました。
ビルドの遅さやパッチうんぬんはMiddlemanのせいではなくて自分の使い方が悪かったせいなんですけどね 😅
esaをやめるときにもスクリプトでいろいろ変換してて移行しやすくなってたのもあってスムーズに移行できてよかったです ✨</description>
    </item>
    
    <item>
      <title>GCP Updates | May 28, 2019</title>
      <link>https://blog.nownabe.com/2019/05/29/gcp-product-updates-may-28-2019.html/</link>
      <pubDate>Wed, 29 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/05/29/gcp-product-updates-may-28-2019.html/</guid>
      <description>再開しました。 HYBRID &amp;amp; MULTI-CLOUD Anthos Config Management: GA Manage configuration and enforce policy across your clusters – whether they’re on-premises or in the cloud. Set a declarative configuration for role-based access controls, resource quotas, and Namespaces – all from a single place. Documentation | Blog GitOpsみたいなことが</description>
    </item>
    
    <item>
      <title>よくしらんRailsアプリとかをAWSのレガシーシステムからGCPのイケイケシステムに移行した話</title>
      <link>https://blog.nownabe.com/2019/05/21/migration-to-gcp.html/</link>
      <pubDate>Tue, 21 May 2019 00:00:00 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/05/21/migration-to-gcp.html/</guid>
      <description>はじめに Railsアプリケーションを中心とするシステムをAWSからGCPに移行しました。本記事ではその過程をできるだけ赤裸々に公開します。 本</description>
    </item>
    
    <item>
      <title>GCP updates  | January 7, 2019</title>
      <link>https://blog.nownabe.com/2019/01/15/1450.html/</link>
      <pubDate>Tue, 15 Jan 2019 13:38:23 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/01/15/1450.html/</guid>
      <description>MANAGEMENT TOOLS Istio on Kubernetes Engine: beta Get one-click Istio deployment on Kubernetes Engine – or add Istio to an existing Kubernetes Engine cluster. Quickly create all the components you need to run an open-source service mesh to connect, manage, and secure microservices in a uniform way. Documentation GKEにマネージドのIstioをデプロイでき</description>
    </item>
    
    <item>
      <title>2019年の抱負</title>
      <link>https://blog.nownabe.com/2019/01/14/1449.html/</link>
      <pubDate>Mon, 14 Jan 2019 12:09:28 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/01/14/1449.html/</guid>
      <description>いまさら感ありますが、三連休でふと気が向いたので書きます。 2018年 2018年は総合すると良い一年ではありませんでした。いろいろあってだいぶ</description>
    </item>
    
    <item>
      <title>GitHubの有料プランを解約した</title>
      <link>https://blog.nownabe.com/2019/01/08/1448.html/</link>
      <pubDate>Tue, 08 Jan 2019 10:22:02 +0900</pubDate>
      
      <guid>https://blog.nownabe.com/2019/01/08/1448.html/</guid>
      <description>GitHubのプランが刷新されて無料で無制限のプライベートレポジトリが使えるようになりましたね 🎉 というわけでGitHubの有料プランを解約し</description>
    </item>
    
  </channel>
</rss>